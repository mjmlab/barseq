#!/usr/bin/env python3

"""
Bin executable fro command line usage

"""

import sys
import argparse
import logging
from pathlib import Path

# Module import
from barseq.main import main


__author__ = "Emanuel Burgos"
__email__ = "eburgos@wisc.edu"

# Get logger
logger = logging.getLogger("barseq")


def parse_args(args):
    if not args:
        args = ["-h"]
    # Parse arguments
    parser = argparse.ArgumentParser('Python software for analyzing barseq data.')

    parser.add_argument("-i", "--input", help="Directory where fastq/fastq.gz files are located.")

    parser.add_argument("-b", "--barcodes", help="CSV file with barcodes for genes", default='')

    parser.add_argument("-e", "--experiment", help="Name for experiment", default='barseq-run')

    parser.add_argument('-f', '--force', help="If results/<experiment> exists, overwrite it", action="store_true", default=False)

    parser.add_argument("-s", "--samples", help='', default=None)

    parser.add_argument("-o", "--output", help='Path to store output files', default=Path('./'))

    parser.add_argument("--reference-free", help="Infer barcodes sequences from reads. "
                                                 "If True, provide a table for sample names.", action="store_true", default=False)

    parser.add_argument("--min-count", help="Minimum barcode counts required to be considered", default=20)
    parser.add_argument('-fr', '--flanking-right', default='GACTTGACCTGGATGTCT', help='')
    parser.add_argument('-fl', '--flanking-left', default='GCTCATGCACTTGATTCC', help='')
    parser.add_argument('--barcode-length', default=18, help='Length of barcode sequence')

    # Process arguments given
    args = parser.parse_args(args)
    return args


if __name__ == '__main__':
    main(parse_args(sys.argv[1:]))
